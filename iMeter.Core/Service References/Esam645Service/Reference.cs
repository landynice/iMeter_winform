//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace iMeter.Esam645Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class EsamException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentityAuthenticationData", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class IdentityAuthenticationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutEndataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutRandField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutEndata {
            get {
                return this.OutEndataField;
            }
            set {
                if ((object.ReferenceEquals(this.OutEndataField, value) != true)) {
                    this.OutEndataField = value;
                    this.RaisePropertyChanged("OutEndata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutRand {
            get {
                return this.OutRandField;
            }
            set {
                if ((object.ReferenceEquals(this.OutRandField, value) != true)) {
                    this.OutRandField = value;
                    this.RaisePropertyChanged("OutRand");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MacData", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class MacData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataValue {
            get {
                return this.DataValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DataValueField, value) != true)) {
                    this.DataValueField = value;
                    this.RaisePropertyChanged("DataValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InCreasePurseData", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class InCreasePurseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAC1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAC2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyCount {
            get {
                return this.BuyCountField;
            }
            set {
                if ((this.BuyCountField.Equals(value) != true)) {
                    this.BuyCountField = value;
                    this.RaisePropertyChanged("BuyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyMoney {
            get {
                return this.BuyMoneyField;
            }
            set {
                if ((this.BuyMoneyField.Equals(value) != true)) {
                    this.BuyMoneyField = value;
                    this.RaisePropertyChanged("BuyMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataValue {
            get {
                return this.DataValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DataValueField, value) != true)) {
                    this.DataValueField = value;
                    this.RaisePropertyChanged("DataValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC1 {
            get {
                return this.MAC1Field;
            }
            set {
                if ((object.ReferenceEquals(this.MAC1Field, value) != true)) {
                    this.MAC1Field = value;
                    this.RaisePropertyChanged("MAC1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC2 {
            get {
                return this.MAC2Field;
            }
            set {
                if ((object.ReferenceEquals(this.MAC2Field, value) != true)) {
                    this.MAC2Field = value;
                    this.RaisePropertyChanged("MAC2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserNo {
            get {
                return this.UserNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNoField, value) != true)) {
                    this.UserNoField = value;
                    this.RaisePropertyChanged("UserNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InintPurseData", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class InintPurseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAC1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAC2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrepayMoneyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataValue {
            get {
                return this.DataValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DataValueField, value) != true)) {
                    this.DataValueField = value;
                    this.RaisePropertyChanged("DataValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultString {
            get {
                return this.DefaultStringField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultStringField, value) != true)) {
                    this.DefaultStringField = value;
                    this.RaisePropertyChanged("DefaultString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC1 {
            get {
                return this.MAC1Field;
            }
            set {
                if ((object.ReferenceEquals(this.MAC1Field, value) != true)) {
                    this.MAC1Field = value;
                    this.RaisePropertyChanged("MAC1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC2 {
            get {
                return this.MAC2Field;
            }
            set {
                if ((object.ReferenceEquals(this.MAC2Field, value) != true)) {
                    this.MAC2Field = value;
                    this.RaisePropertyChanged("MAC2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrepayMoney {
            get {
                return this.PrepayMoneyField;
            }
            set {
                if ((this.PrepayMoneyField.Equals(value) != true)) {
                    this.PrepayMoneyField = value;
                    this.RaisePropertyChanged("PrepayMoney");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EncMacWrite", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class EncMacWrite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endata {
            get {
                return this.EndataField;
            }
            set {
                if ((object.ReferenceEquals(this.EndataField, value) != true)) {
                    this.EndataField = value;
                    this.RaisePropertyChanged("Endata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadPresetCard", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
    [System.SerializableAttribute()]
    public partial class ReadPresetCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutData1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutData2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutData3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutData4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutData5Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData1 {
            get {
                return this.OutData1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OutData1Field, value) != true)) {
                    this.OutData1Field = value;
                    this.RaisePropertyChanged("OutData1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData2 {
            get {
                return this.OutData2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OutData2Field, value) != true)) {
                    this.OutData2Field = value;
                    this.RaisePropertyChanged("OutData2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData3 {
            get {
                return this.OutData3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OutData3Field, value) != true)) {
                    this.OutData3Field = value;
                    this.RaisePropertyChanged("OutData3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData4 {
            get {
                return this.OutData4Field;
            }
            set {
                if ((object.ReferenceEquals(this.OutData4Field, value) != true)) {
                    this.OutData4Field = value;
                    this.RaisePropertyChanged("OutData4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutData5 {
            get {
                return this.OutData5Field;
            }
            set {
                if ((object.ReferenceEquals(this.OutData5Field, value) != true)) {
                    this.OutData5Field = value;
                    this.RaisePropertyChanged("OutData5");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="htpp://gwkm.com", ConfigurationName="Esam645Service.IEsamOption")]
    public interface IEsamOption {
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Connection", ReplyAction="htpp://gwkm.com/IEsamOption/ConnectionResponse")]
        bool Connection();
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/IsOpenedDevice", ReplyAction="htpp://gwkm.com/IEsamOption/IsOpenedDeviceResponse")]
        bool IsOpenedDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/ConnectDevice", ReplyAction="htpp://gwkm.com/IEsamOption/ConnectDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/ConnectDeviceEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        int ConnectDevice(string PutIP, string PutPort, string PutCtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/OpenDevice", ReplyAction="htpp://gwkm.com/IEsamOption/OpenDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/OpenDeviceEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        int OpenDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/CloseDevice", ReplyAction="htpp://gwkm.com/IEsamOption/CloseDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/CloseDeviceEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        int CloseDevice();
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Tools_CreateRand", ReplyAction="htpp://gwkm.com/IEsamOption/Tools_CreateRandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Tools_CreateRandEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Tools_CreateRand();
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_IdentityAuthentication", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_IdentityAuthenticationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_IdentityAuthenticationEsamExceptionFault" +
            "", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.IdentityAuthenticationData Meter_Formal_IdentityAuthentication(int Flag, string PutDiv);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_UserControl", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_UserControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_UserControlEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Meter_Formal_UserControl(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdateEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.MacData Meter_Formal_ParameterUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate1", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate1EsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.MacData Meter_Formal_ParameterUpdate1(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate2", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterUpdate2EsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.MacData Meter_Formal_ParameterUpdate2(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterElseUpdate", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterElseUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_ParameterElseUpdateEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.MacData Meter_Formal_ParameterElseUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_InCreasePurse", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_InCreasePurseResponse")]
        iMeter.Esam645Service.InCreasePurseData Meter_Formal_InCreasePurse(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_InintPurse", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_InintPurseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_InintPurseEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.InintPurseData Meter_Formal_InintPurse(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_DataClear1", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_DataClear1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_DataClear1EsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Meter_Formal_DataClear1(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_DataClear2", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_DataClear2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_DataClear2EsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Meter_Formal_DataClear2(int counter, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_InfraredAuth", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_InfraredAuthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_InfraredAuthEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Meter_Formal_InfraredAuth(int Flag, string PutDiv, string PutEsamNo, string PutRand1, string PutRand1Endata, string PutRand2);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_MacCheck", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_MacCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_MacCheckEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        int Meter_Formal_MacCheck(int Flag, string PutRand, string PutDiv, string PutApdu, string putData, string putMac);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_EncMacWrite", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_EncMacWriteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_EncMacWriteEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.EncMacWrite Meter_Formal_EncMacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_MacWrite", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_MacWriteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_MacWriteEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Meter_Formal_MacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_EncForCompare", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_EncForCompareResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_EncForCompareEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        string Meter_Formal_EncForCompare(string PutKeyid, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_DecreasePurse", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_DecreasePurseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_DecreasePurseEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.EncMacWrite Meter_Formal_DecreasePurse(int Flag, string PutRand, string PutDiv, string PutData);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_Formal_Preset_Card", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_Formal_Preset_CardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_Formal_Preset_CardEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        int Meter_Formal_Preset_Card(string PutData1, string PutData2, string PutData3, string PutData4, string PutData5);
        
        [System.ServiceModel.OperationContractAttribute(Action="htpp://gwkm.com/IEsamOption/Meter_ReadPreset_Card", ReplyAction="htpp://gwkm.com/IEsamOption/Meter_ReadPreset_CardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(iMeter.Esam645Service.EsamException), Action="htpp://gwkm.com/IEsamOption/Meter_ReadPreset_CardEsamExceptionFault", Name="EsamException", Namespace="http://schemas.datacontract.org/2004/07/EsamOptionContrancts")]
        iMeter.Esam645Service.ReadPresetCard Meter_ReadPreset_Card();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEsamOptionChannel : iMeter.Esam645Service.IEsamOption, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EsamOptionClient : System.ServiceModel.ClientBase<iMeter.Esam645Service.IEsamOption>, iMeter.Esam645Service.IEsamOption {
        
        public EsamOptionClient() {
        }
        
        public EsamOptionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EsamOptionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EsamOptionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EsamOptionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Connection() {
            return base.Channel.Connection();
        }
        
        public bool IsOpenedDevice() {
            return base.Channel.IsOpenedDevice();
        }
        
        public int ConnectDevice(string PutIP, string PutPort, string PutCtime) {
            return base.Channel.ConnectDevice(PutIP, PutPort, PutCtime);
        }
        
        public int OpenDevice() {
            return base.Channel.OpenDevice();
        }
        
        public int CloseDevice() {
            return base.Channel.CloseDevice();
        }
        
        public string Tools_CreateRand() {
            return base.Channel.Tools_CreateRand();
        }
        
        public iMeter.Esam645Service.IdentityAuthenticationData Meter_Formal_IdentityAuthentication(int Flag, string PutDiv) {
            return base.Channel.Meter_Formal_IdentityAuthentication(Flag, PutDiv);
        }
        
        public string Meter_Formal_UserControl(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutData) {
            return base.Channel.Meter_Formal_UserControl(Flag, PutRand, PutDiv, PutEsamNo, PutData);
        }
        
        public iMeter.Esam645Service.MacData Meter_Formal_ParameterUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterUpdate(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public iMeter.Esam645Service.MacData Meter_Formal_ParameterUpdate1(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterUpdate1(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public iMeter.Esam645Service.MacData Meter_Formal_ParameterUpdate2(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterUpdate2(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public iMeter.Esam645Service.MacData Meter_Formal_ParameterElseUpdate(int Flag, string PutRand, string PutDiv, string PutApdu, string PutData) {
            return base.Channel.Meter_Formal_ParameterElseUpdate(Flag, PutRand, PutDiv, PutApdu, PutData);
        }
        
        public iMeter.Esam645Service.InCreasePurseData Meter_Formal_InCreasePurse(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_InCreasePurse(Flag, PutRand, PutDiv, PutData);
        }
        
        public iMeter.Esam645Service.InintPurseData Meter_Formal_InintPurse(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_InintPurse(Flag, PutRand, PutDiv, PutData);
        }
        
        public string Meter_Formal_DataClear1(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_DataClear1(Flag, PutRand, PutDiv, PutData);
        }
        
        public string Meter_Formal_DataClear2(int counter, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_DataClear2(counter, PutRand, PutDiv, PutData);
        }
        
        public string Meter_Formal_InfraredAuth(int Flag, string PutDiv, string PutEsamNo, string PutRand1, string PutRand1Endata, string PutRand2) {
            return base.Channel.Meter_Formal_InfraredAuth(Flag, PutDiv, PutEsamNo, PutRand1, PutRand1Endata, PutRand2);
        }
        
        public int Meter_Formal_MacCheck(int Flag, string PutRand, string PutDiv, string PutApdu, string putData, string putMac) {
            return base.Channel.Meter_Formal_MacCheck(Flag, PutRand, PutDiv, PutApdu, putData, putMac);
        }
        
        public iMeter.Esam645Service.EncMacWrite Meter_Formal_EncMacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData) {
            return base.Channel.Meter_Formal_EncMacWrite(Flag, PutRand, PutDiv, PutEsamNo, PutFileID, PutDataBegin, PutData);
        }
        
        public string Meter_Formal_MacWrite(int Flag, string PutRand, string PutDiv, string PutEsamNo, string PutFileID, string PutDataBegin, string PutData) {
            return base.Channel.Meter_Formal_MacWrite(Flag, PutRand, PutDiv, PutEsamNo, PutFileID, PutDataBegin, PutData);
        }
        
        public string Meter_Formal_EncForCompare(string PutKeyid, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_EncForCompare(PutKeyid, PutDiv, PutData);
        }
        
        public iMeter.Esam645Service.EncMacWrite Meter_Formal_DecreasePurse(int Flag, string PutRand, string PutDiv, string PutData) {
            return base.Channel.Meter_Formal_DecreasePurse(Flag, PutRand, PutDiv, PutData);
        }
        
        public int Meter_Formal_Preset_Card(string PutData1, string PutData2, string PutData3, string PutData4, string PutData5) {
            return base.Channel.Meter_Formal_Preset_Card(PutData1, PutData2, PutData3, PutData4, PutData5);
        }
        
        public iMeter.Esam645Service.ReadPresetCard Meter_ReadPreset_Card() {
            return base.Channel.Meter_ReadPreset_Card();
        }
    }
}
